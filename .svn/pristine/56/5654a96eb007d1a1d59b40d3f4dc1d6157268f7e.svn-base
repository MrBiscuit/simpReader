//
//  PictureCollectionViewController.m
//  ProjectAlpha
//
//  Created by lanou3g on 15/10/25.
//  Copyright © 2015年 com.sunshuaiqi. All rights reserved.
//

#import "PictureCollectionViewController.h"

#import "PictureCollectionViewCell.h"
#import "PictureModel.h"
#import "PictureBrowsingViewController.h"


#define kPictureUrl @"http://zhiyue.cutt.com/api/clip/images?clipId=101740267&tagId=46901"

@interface PictureCollectionViewController ()

@property (nonatomic,strong) NSMutableArray * modelArray;
@property (nonatomic,assign) NSInteger next; // 用来存储下拉加载的页面的next值



@end

@implementation PictureCollectionViewController

static NSString * const reuseIdentifier = @"Cell";

// 懒加载
- (NSMutableArray *)modelArray
{
    if (!_modelArray) {
        
        _modelArray = [NSMutableArray array];
    }

    return _modelArray;
}


- (void)viewDidLoad {
    [super viewDidLoad];
    
    
    self.collectionView.backgroundColor = [UIColor whiteColor];
    // 采用自定义的布局方式
    WaterFlowLayout * layout = [WaterFlowLayout new];
    // 绑定代理
    layout.delegate = self;
    
    self.collectionView.collectionViewLayout = layout;
    
    // 注册cell
    [self.collectionView registerClass:[PictureCollectionViewCell class] forCellWithReuseIdentifier:reuseIdentifier];

    self.collectionView.contentInset = UIEdgeInsetsMake(0, 0, 50, 0);
    
    [self parseData];
}


// 解析数据
- (void)parseData
{

    NSURL * url = [NSURL URLWithString:kPictureUrl];
    NSURLRequest * request = [NSURLRequest requestWithURL:url];
    __weak PictureCollectionViewController * weakSelf = self;
    NSURLSessionDataTask * task = [[NSURLSession sharedSession] dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {
        
        if (data != nil) {
            
            NSDictionary * dict = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
            
            NSArray * articlesArray = dict[@"articles"];
            self.next = (long)dict[@"next"];
            
            for (NSDictionary * dic in articlesArray) {
                
                PictureModel * model = [PictureModel new];
                [model setValuesForKeysWithDictionary:dic];
                [weakSelf.modelArray addObject:model];
                
                
            }
            
        }
        
    
        // 主线程刷新UI
        dispatch_async(dispatch_get_main_queue(), ^{
           
            [self.collectionView reloadData];
            
        });
        
    }];
    
    [task resume];
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


#pragma mark <UICollectionViewDataSource>

// 分区个数
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView {

    return 1;
}

// 每个分区item的个数
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {

    return _modelArray.count;
}

// 显示cell上的内容
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    PictureCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:reuseIdentifier forIndexPath:indexPath];
    
    PictureModel * model = _modelArray[indexPath.row];
    cell.model = model;
    
    return cell;
}





#pragma mark -- 实现布局中的代理方法
- (CGFloat)waterFlow:(WaterFlowLayout *)waterFlow heightForWidth:(CGFloat)width atIndexPath:(NSIndexPath *)indexPath
{

    PictureModel * model = _modelArray[indexPath.row];
    
    NSArray * array = [model.imgDim componentsSeparatedByString:@"x"];

    
    return [array.firstObject floatValue] / [array.lastObject floatValue] * width;
}

#pragma mark -- 点击某个cell进入详情页
- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{

    PictureBrowsingViewController * pictureBrowseVC = [[PictureBrowsingViewController alloc] init];
    
    UINavigationController * NC = [[UINavigationController alloc] initWithRootViewController:pictureBrowseVC];

    PictureModel * model = _modelArray[indexPath.row];
    pictureBrowseVC.intro = model.title;
    pictureBrowseVC.imgIdsArray = model.imageIds;
    [self presentViewController:NC animated:YES completion:nil];
    
}





#pragma mark <UICollectionViewDelegate>

/*
// Uncomment this method to specify if the specified item should be highlighted during tracking
- (BOOL)collectionView:(UICollectionView *)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath *)indexPath {
	return YES;
}
*/

/*
// Uncomment this method to specify if the specified item should be selected
- (BOOL)collectionView:(UICollectionView *)collectionView shouldSelectItemAtIndexPath:(NSIndexPath *)indexPath {
    return YES;
}
*/

/*
// Uncomment these methods to specify if an action menu should be displayed for the specified item, and react to actions performed on the item
- (BOOL)collectionView:(UICollectionView *)collectionView shouldShowMenuForItemAtIndexPath:(NSIndexPath *)indexPath {
	return NO;
}

- (BOOL)collectionView:(UICollectionView *)collectionView canPerformAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(id)sender {
	return NO;
}

- (void)collectionView:(UICollectionView *)collectionView performAction:(SEL)action forItemAtIndexPath:(NSIndexPath *)indexPath withSender:(id)sender {
	
}
*/

@end
