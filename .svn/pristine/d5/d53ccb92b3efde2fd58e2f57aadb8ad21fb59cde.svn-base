//
//  MediaListViewController.m
//  ProjectAlpha
//
//  Created by lanou3g on 10/22/15.
//  Copyright © 2015 com.sunshuaiqi. All rights reserved.
//

#import "MediaListViewController.h"
#import <SDCycleScrollView.h>
#import "MovieModel.h"
#import "MediaListCollectionViewCell.h"
#import "MediaDetailsViewController.h"

@interface MediaListViewController ()<SDCycleScrollViewDelegate>
@property (nonatomic,strong)NSMutableArray * loopmoveArray;//轮播图电影对象
@property (nonatomic,strong)NSMutableArray *loopImagesUrlArray;//轮播图
@property (nonatomic,strong)NSMutableArray * recommendArray;//推荐
@property (nonatomic,strong)NSMutableArray *titleArray;//存放轮播标题
@property (nonatomic,strong)UICollectionView *collectionView;//集合视图
@property (nonatomic,strong)NSMutableArray  *courseArray;//存放课程
@property (nonatomic,strong)SDCycleScrollView *cycleScrollView;//轮播图



@end

@implementation MediaListViewController

//懒加载
- (NSMutableArray *)courseArray
{
    if (!_courseArray) {
        
        _courseArray = [NSMutableArray array];
    }
    
    return _courseArray;
}
- (void)viewDidLoad {
    
    [super viewDidLoad];
    
    self.view.backgroundColor = [UIColor whiteColor];
    
    self.automaticallyAdjustsScrollViewInsets = NO;

    [self getData];
    //创建轮播图
    [self creatCycleScrollView];
    //创建集合视图
    [self creatCollectionView];
   
    
 
}
//请求数据
- (void)getData
{
    NSString * url = @"http://c.open.163.com/mobile/recommend/v1.do?mt=aphone";
    AFHTTPSessionManager * manager = [AFHTTPSessionManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObjects:@"text/html", nil];
    [manager GET:url parameters:nil success:^(NSURLSessionDataTask * _Nonnull task, id  _Nonnull responseObject) {
       // print(@"%@",responseObject);
     NSData * data = [NSJSONSerialization dataWithJSONObject:responseObject options:NSJSONWritingPrettyPrinted error:nil];
        if (data != nil) {
            
            NSMutableArray * array = [NSJSONSerialization JSONObjectWithData:data options:kNilOptions error:nil];
            
            NSDictionary * loopdic = array[0];//得到轮播图字典
            NSArray * loopVosArray = loopdic[@"vos"];//得到轮播图数组
            //存放轮播图电影对象
            self.loopmoveArray = [NSMutableArray array];
            self.loopImagesUrlArray = [NSMutableArray array];
            self.titleArray = [NSMutableArray array];
            for (NSDictionary * dict in loopVosArray) {
                //创建对象
                MovieModel * model = [MovieModel new];
                [model setValuesForKeysWithDictionary:dict];
                [self.loopImagesUrlArray addObject:model.picUrl];
                [self.titleArray addObject:model.title];
               // print(@"%@",model.title);
                //print(@"%@",model.picUrl);
                print(@"%@",model.contentId);
                [self.loopmoveArray addObject:model];
            }
            //存放推荐区电影对象
            self.recommendArray = [NSMutableArray array];
            //分别取出5个对应数组中的元素放在recommend数组中
            for (int i = 1; i < array.count; i++) {
                if (i==3) {
                    //取出课程
                    for (NSDictionary * dict in array[i][@"vos"]) {
                        MovieModel * model = [MovieModel new];
                        [model setValuesForKeysWithDictionary:dict];
                        [self.courseArray addObject:model];
                     print(@"%@",model.contentId);
                    }
                }else{
                    //取出非课程
                for (NSDictionary * dict in array[i][@"vos"]) {
                    MovieModel * model = [MovieModel new];
                    [model setValuesForKeysWithDictionary:dict];
                    [self.recommendArray addObject:model];
                    print(@"%@",model.contentId);
                }
                }
            }
        }
        [self.collectionView reloadData];
    } failure:^(NSURLSessionDataTask * _Nonnull task, NSError * _Nonnull error) {
        //print(@"%@",error);
    }];

}

//创建轮播图
-(void)creatCycleScrollView
{
    self.cycleScrollView = [SDCycleScrollView cycleScrollViewWithFrame:CGRectMake(0, 64,self.view.bounds.size.width, 180) imageURLStringsGroup:nil];
    
    _cycleScrollView.delegate = self;//设置代理
    _cycleScrollView.pageControlAliment = SDCycleScrollViewPageContolAlimentRight;
    _cycleScrollView.titlesGroup = self.titleArray;
    _cycleScrollView.pageControlDotSize = CGSizeMake(3, 3);
    _cycleScrollView.dotColor = [UIColor colorWithRed:1.0 green:1.0 blue:1.0 alpha:1.0];
    [self.view addSubview:_cycleScrollView];
   // --- 加载（延迟）
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self.loopImagesUrlArray removeObject:self.loopImagesUrlArray.lastObject];//移除最后一个图片
        [self.titleArray removeObject:self.titleArray.lastObject];//移除最后一个标题
        _cycleScrollView.imageURLStringsGroup = self.loopImagesUrlArray;//设置图片数组
        _cycleScrollView.titlesGroup = self.titleArray;//设置 图片标题
    });

}
//实现轮播图代理方法
- (void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index
{  //实现点击scrollView的方法
    MovieModel * model = self.loopmoveArray[index];
    MediaDetailsViewController * detailVC = [[MediaDetailsViewController alloc] init];
    detailVC.movieID = model.contentId;
    
    UINavigationController * NC = [[UINavigationController alloc] initWithRootViewController:detailVC];;
    [self presentViewController:NC animated:YES completion:nil];
    
}
//创建集合视图
- (void)creatCollectionView
{   UICollectionViewFlowLayout * layout = [[UICollectionViewFlowLayout alloc] init];
    self.collectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0,0,200,200) collectionViewLayout:layout];
    //注册cell
    [self.collectionView registerClass:[MediaListCollectionViewCell class] forCellWithReuseIdentifier:@"collectionViewCell"];
    
    _collectionView.backgroundColor = [UIColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:1.0];
    _collectionView.delegate = self;
    _collectionView.dataSource = self;
    [self.view addSubview:self.collectionView];
    //添加约束
    [self.collectionView mas_makeConstraints:^(MASConstraintMaker *make) {
       
        make.top.equalTo(self.cycleScrollView.mas_bottom);
        make.left.equalTo(self.view.mas_left);
        make.right.equalTo(self.view.mas_right);
        make.bottom.equalTo(self.view.mas_bottom).offset(-self.tabBarController.tabBar.frame.size.height);
        [self loadViewIfNeeded];
        
    }];
    _collectionView.decelerationRate = 0.5;
}
#pragma mark------分区个数
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
{
    return 2;
}
#pragma mark-------每个分区的cell个数
- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    if (section==0) {
        return self.courseArray.count;
    }else{
        
        return self.recommendArray.count;
    }
}
#pragma mark -------返回cell----
- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    MediaListCollectionViewCell * cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"collectionViewCell" forIndexPath:indexPath];
    MovieModel * model = [MovieModel new];
    //判断分区
    if (indexPath.section == 0) {
        
        model = self.courseArray[indexPath.row];
    }else{
        model = self.recommendArray[indexPath.row];
    }
    [cell.movieImgView sd_setImageWithURL:[NSURL URLWithString:model.picUrl]placeholderImage:[UIImage imageNamed:@"43.jpg"]];//设置图片
    
    cell.movieTitleLabel.text = model.title;//设置标题
    
    return cell;
}
//设置cell大小
- (CGSize)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout sizeForItemAtIndexPath:(NSIndexPath *)indexPath
{
    //分区不同cell大小不同
    if (indexPath.section == 0) {
        
        return CGSizeMake((self.view.frame.size.width/2)-5, 187*(457.0/326.0));
    }else{
    return CGSizeMake((self.view.frame.size.width/2)-5,150);
    }
}
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout minimumInteritemSpacingForSectionAtIndex:(NSInteger)section
{
    return 0;
}
- (CGFloat)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout minimumLineSpacingForSectionAtIndex:(NSInteger)section{
    return 0.0;
}

-(void)scrollViewDidScroll:(UIScrollView *)scrollView{
    //给偏移量添加观察者
    [scrollView addObserver:self forKeyPath:@"contentOffset" options:NSKeyValueObservingOptionNew|NSKeyValueObservingOptionOld context:nil];
}
//实现观察者方法
- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary<NSString *,id> *)change context:(void *)context
{

    CGPoint newContOffset = [change[NSKeyValueChangeNewKey] CGPointValue];
    
    CGPoint oldContOffset= [change[NSKeyValueChangeOldKey] CGPointValue];
    
    CGFloat dy = newContOffset.y - oldContOffset.y;
    
    if (dy > 0 && oldContOffset.y > 180) {
         _cycleScrollView.frame = CGRectMake(0,64,self.view.bounds.size.width,_cycleScrollView.frame.size.height - dy*0.005);
//        _cycleScrollView.frame = CGRectMake(0,CGRectGetMinY(_cycleScrollView.frame)-dy,self.view.bounds.size.width,180);
    }
    else if (dy < 0&&_cycleScrollView.frame.size.height < 180&&oldContOffset.y < 140){

         _cycleScrollView.frame = CGRectMake(0, 64,self.view.bounds.size.width, _cycleScrollView.frame.size.height - dy*0.006);
//        _cycleScrollView.frame = CGRectMake(0, CGRectGetMinY(_cycleScrollView.frame)-dy,self.view.bounds.size.width, 180);
//
    }

}
//点击cell实现方法
-(void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath
{
    MediaDetailsViewController * detailVC = [MediaDetailsViewController new];
    
    MovieModel * model = [MovieModel new];
    if (indexPath.section == 0){
        
        model = self.courseArray[indexPath.row];
    }else{
        
        model = self.recommendArray[indexPath.row];
    }

    detailVC.movieID = model.contentId;
    detailVC.movieImgUrl =model.picUrl;
    UINavigationController * NC = [[UINavigationController alloc] initWithRootViewController:detailVC];
    [self presentViewController:NC animated:YES completion:nil];
    
}


//移除观察者
-(void)viewDidUnload{
    [_collectionView removeObserver:self forKeyPath:@"contentOffset"];

}
-(UIEdgeInsets)collectionView:(UICollectionView *)collectionView layout:(UICollectionViewLayout *)collectionViewLayout insetForSectionAtIndex:(NSInteger)section
{
    return UIEdgeInsetsMake(0,0,0,0);//分别为上、左、下、右
}


@end
