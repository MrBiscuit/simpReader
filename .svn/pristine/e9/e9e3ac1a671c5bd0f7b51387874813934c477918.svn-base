//
//  MediaDetailsViewController.m
//  ProjectAlpha
//
//  Created by lanou3g on 15/10/26.
//  Copyright © 2015年 com.sunshuaiqi. All rights reserved.
//

#import "MediaDetailsViewController.h"
#import <MediaPlayer/MediaPlayer.h>
#import <AVKit/AVKit.h>
#import <AVFoundation/AVFoundation.h>
#import "MoviePlayerModel.h"
#import <SVProgressHUD.h>

@interface MediaDetailsViewController ()<UIGestureRecognizerDelegate>
@property(nonatomic,strong)NSString * movieUrlStr;
@property (nonatomic,strong)MoviePlayerModel * movieModel;
@property (nonatomic,strong)NSMutableArray *urlArray;//存放播放链接
@property (nonatomic,strong)AVPlayer *player;
@property (nonatomic,strong)AVPlayerItem  *playerItem;
@property (nonatomic,strong)UIImageView *movieImgView;
@property (nonatomic,strong)UITapGestureRecognizer *tapRecognizer;
@property (nonatomic,strong)UIButton *pauseOrPlayBtn;
@property (nonatomic,strong)UIView *maskView;//透明遮盖
@property (nonatomic,strong)UIView * PlayControlsView;//存放播放控件的View
@property (nonatomic,assign)BOOL isPlaying;
@property (nonatomic,strong)AVPlayerLayer *playerLayer;//播放器的layer
@property (nonatomic,strong)NSTimer * timer ;
@property (nonatomic,strong)UILabel *titleLabel;//标题
@property (nonatomic,assign)NSInteger count;//字典中对应的video
@property (nonatomic,strong)UIButton *fullScreenBtn;//全屏按钮
@property (nonatomic,assign)BOOL isFullScreen;
@end

@implementation MediaDetailsViewController


#pragma mark - 懒加载
- (AVPlayer *)player
{
    if (!_player) {
        self.player = [AVPlayer playerWithPlayerItem:self.playerItem];
        
    }
    return _player;
}

//懒加载
- (MoviePlayerModel *)movieModel
{
    if (!_movieModel) {
        
        _movieModel = [MoviePlayerModel new];
    }
    return _movieModel;
}
- (NSMutableArray *)urlArray
{
    if (!_urlArray) {
        
        _urlArray = [NSMutableArray array];
    }
    return _urlArray;
}
//+ (Class)layerClass
//{
//    return [AVPlayerLayer class];
//}
//


-(void)viewDidLoad

{
    [super viewDidLoad];
    self.count = 0;
    
    
    //设置返回键
    self.view.backgroundColor = [UIColor colorWithRed:0.5929 green:1.0 blue:0.8062 alpha:1.0];
    UIBarButtonItem * LBI = [[UIBarButtonItem alloc] initWithImage:[AlphaIcons imageOfBackArrowWithFrame:CGRectMake(0, 0, 25, 25)]  style:UIBarButtonItemStylePlain target:self action:@selector(didClickLBI:)];
    LBI.tintColor = [UIColor blackColor];
    self.navigationItem.leftBarButtonItem = LBI;
#pragma mark ---解析数据
    
    [self getData];
}

#pragma mark -- 创建视频播放器

- (void)themeColorUpdate:(NSNotification*)notification
{
    self.view.backgroundColor = notification.userInfo[@"light"];
}

- (void)preparePlayMovie
{
    //
    //    if (self.player.currentItem==nil) {
    //
    //        self.player = [AVPlayer playerWithPlayerItem:self.playerItem];
    //    }
}

#pragma mark -- 返回事件
- (void)didClickLBI:(UIBarButtonItem *)LBI
{
    
    [SVProgressHUD dismiss];
    [self.player pause];
    [self dismissViewControllerAnimated:YES completion:nil];
}

#pragma mark- 开始播放


//播放视频
-(void)playMovie
{
    self.timer  = [NSTimer scheduledTimerWithTimeInterval:0.01 target:self selector:@selector(playingAction) userInfo:nil repeats:YES];
    // 3.将定时器添加到时间循环
    [[NSRunLoop mainRunLoop] addTimer:_timer forMode:NSRunLoopCommonModes];
    [self HiddenToolBar];
    [self.maskView setAlpha:0.02];
    [self preparePlayMovie];
    
    [self.player play];
    

    
}

-(void)HiddenToolBar
{
    [self performSelector:@selector(hidden) withObject:nil afterDelay:2.5 ];
    
}
- (void)hidden
{
    
    self.PlayControlsView.hidden =YES;
    self.titleLabel.hidden = YES;
    
}
- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary<NSString *,id> *)change context:(void *)context
{
    if ([keyPath isEqualToString:@"rate"]&&self.playerItem.error==nil) {
        
        if ([change[NSKeyValueChangeNewKey] floatValue] == 1.0) {
            

        }
        
    }
}

- (void)playingAction
{
    CGFloat time = self.player.currentTime.value / self.player.currentTime.timescale;
    
    if (time > 0) {
        [SVProgressHUD dismiss];
        self.movieImgView.hidden = YES;
        [self.timer invalidate];
        self.timer = nil;
        
    }
}

//暂停
- (void)pausePlayMovie
{
    [self.player pause];
}

#pragma mark- 点击暂停
- (void)didClickpauseOrPlayBtn:(UIButton*)pauseBI
{
    
    // 默认是 selected = NO
    if (self.isPlaying) {
        
        [pauseBI setImage:[[AlphaIcons imageOfPlayButtonWithFrame:pauseBI.bounds] imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate]forState:UIControlStateNormal];
        // 暂停
        [self pausePlayMovie];
        self.isPlaying = NO;
    }else {
        
        // 风火轮

        [SVProgressHUD setOffsetFromCenter:UIOffsetMake(0, -74)];
        [SVProgressHUD setBackgroundColor:[UIColor clearColor]];
        [SVProgressHUD show];
        
        // 播放
        [pauseBI setImage:[[AlphaIcons imageOfPauseButtonWithFrame:pauseBI.bounds] imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate]forState:UIControlStateNormal];
        
        [self playMovie];
        self.isPlaying = YES;
    }
    
    
}

//获取数据

-(void)didClickMask:(UITapGestureRecognizer *)recognizer
{
    print(@"mask被点击了！！");
    self.PlayControlsView.hidden = NO;
    self.titleLabel.hidden = NO;
    
    [self HiddenToolBar];
    
    
}

- (void)didClickfullScreenBtn:(UIButton *)fullScreenBtn


{
    if ([UIDevice currentDevice].orientation != UIDeviceOrientationPortrait) {
        
        NSNumber * value = [NSNumber numberWithInt:UIInterfaceOrientationPortrait  ];
        [[UIDevice currentDevice] setValue:value forKey:@"orientation"];
    }else {
    
       NSNumber * value = [NSNumber numberWithInt:UIInterfaceOrientationLandscapeLeft ];
       [[UIDevice currentDevice] setValue:value forKey:@"orientation"];

    
   }
    


}

- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id<UIViewControllerTransitionCoordinator>)coordinator
{
    [super viewWillTransitionToSize:size withTransitionCoordinator:coordinator];
    
    

    
    
}

#pragma mark- 获取数据
- (void)getData
{
    NSString * urlStr = [NSString stringWithFormat:@"http://mobile.open.163.com/movie/%@/getMoviesForAndroid.htm",self.movieID];
    print(@"%@",self.movieID);
    print(@"%@",urlStr);
    AFHTTPSessionManager * manager = [AFHTTPSessionManager manager];
    //   if ([self.movieID isEqualToString:@"MAOGLO17M"]) {
    //
    //       self.movieID = @"MB2I303NP_MB5M2MRQ8";
    //    }
    
    // manager.responseSerializer = [AFHTTPResponseSerializer serializer];
    
    manager.responseSerializer.acceptableContentTypes  = [NSSet setWithObjects:@"text/html",@"charset=utf-8", nil];
    NSDictionary * parament = @{@"Server":@"nginx"};
    [manager GET:urlStr parameters:parament success:^(NSURLSessionDataTask * _Nonnull task, id  _Nonnull responseObject) {
        NSDictionary * dic = responseObject;
        [self.movieModel setValuesForKeysWithDictionary:dic];
        //遍历model的videoList数组
        
        for (int i = 0 ; i < self.movieModel.videoList.count;i++ ) {
            
            NSDictionary * dict = self.movieModel.videoList[i];
            if ([dic[@"mid"]isEqualToString:self.midid]) {
                self.count =i;
                [self.urlArray addObject:dict[@"repovideourlmp4"]];
            }else{
                
                [self.urlArray addObject:dict[@"repovideourlmp4"]];
                
            }
        }
        
        
        
        //设置播放器layer上层的View
        self.maskView = [[UIView alloc] initWithFrame:CGRectMake(0, 64, self.view.frame.size.width, 300)];
        
        
        self.maskView.backgroundColor = [UIColor blackColor];
        /**
         *  打开交互给mask添加手势
         */
        self.maskView.userInteractionEnabled = YES;
        self.maskView.alpha = 1.0;
        self.tapRecognizer = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(didClickMask:)];
        _tapRecognizer.delegate = self;
        [_maskView addGestureRecognizer:_tapRecognizer];
        [self.view addSubview:_maskView];
        self.movieUrlStr = self.urlArray[0];
        NSURL * url = [NSURL URLWithString:self.movieUrlStr];
        self.playerItem = [AVPlayerItem playerItemWithURL:url];
        //创建播放器
        self.playerLayer = [AVPlayerLayer playerLayerWithPlayer:self.player];
        _playerLayer.frame = self.maskView.frame;
        _playerLayer.videoGravity = AVLayerVideoGravityResizeAspectFill;
        //add rounded corners and border
//                _playerLayer.masksToBounds = YES;
//                _playerLayer.cornerRadius = 20.0;
//                _playerLayer.borderColor = [UIColor colorWithRed:0.298 green:0.298 blue:0.298 alpha:1.0].CGColor;
//                _playerLayer.borderWidth = 5.0;
        self.navigationItem.title = self.movieModel.title;
        [self.view.layer addSublayer:_playerLayer];
        self.movieImgView = [[UIImageView alloc] initWithFrame:_maskView.bounds];
        [self.movieImgView sd_setImageWithURL:[NSURL URLWithString:self.movieImgUrl]];
        print(@"%@",self.movieImgUrl);
        //打开imgview的交互
        self.movieImgView.userInteractionEnabled = YES;
        self.movieImgView.backgroundColor = [UIColor colorWithRed:0.4995 green:1.0 blue:0.8286 alpha:1.0];
        self.movieImgView.alpha = 1.0;
        [_maskView addSubview:self.movieImgView];
        
        //设置标题
        
        self.titleLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 100, ScreenWidth, 30)];
        self.titleLabel.text = self.movieModel.title;
        self.titleLabel.textAlignment = NSTextAlignmentCenter;
        [self.titleLabel setTextColor:[UIColor whiteColor]];
        self.titleLabel.backgroundColor = [UIColor colorWithRed:0.0 green:0.0 blue:0.0 alpha:0.5];
        [self.view addSubview:_titleLabel];
        [self.titleLabel mas_makeConstraints:^(MASConstraintMaker *make) {
            if ([[UIDevice currentDevice] orientation] == UIDeviceOrientationPortrait){
                make.top.equalTo(self.navigationController.navigationBar.mas_bottom);
            }
            else{
                make.top.equalTo(self.view.mas_top);
             }
            make.left.and.right.mas_equalTo(self.view);
            make.height.mas_equalTo(30);
            
        }];
        self.PlayControlsView = [[UIView alloc] initWithFrame:CGRectMake(0, 370-36, ScreenWidth, 45)];
        _PlayControlsView.backgroundColor = [UIColor colorWithRed:0 green:0.6863 blue:0.9412 alpha:0.1];
        [self.view addSubview:_PlayControlsView];
        [self.PlayControlsView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.and.right.equalTo(self.view);
            make.bottom.equalTo(self.maskView.mas_bottom);
            make.height.mas_equalTo(45);
            
        }];
        
        
        
        //设置暂停按钮
        
        self.pauseOrPlayBtn = [UIButton buttonWithType:UIButtonTypeSystem];
        
        //self.pauseOrPlayBtn.backgroundColor = [UIColor colorWithRed:1.0 green:1.0 blue:1.0 alpha:1.0];
        self.pauseOrPlayBtn.tintColor = [UIColor colorWithRed:0.051 green:0.4275 blue:1.0 alpha:1.0];
        self.pauseOrPlayBtn.frame = CGRectMake(10, 0, 45, 45);
        
        [self.pauseOrPlayBtn setImage:[[AlphaIcons imageOfPlayButtonWithFrame:self.pauseOrPlayBtn.bounds] imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate] forState:UIControlStateNormal];
        
        [self.pauseOrPlayBtn addTarget:self action:@selector(didClickpauseOrPlayBtn:) forControlEvents:UIControlEventTouchUpInside];
        [self.PlayControlsView addSubview:self.pauseOrPlayBtn];
        
    //添加全屏按钮
        
        self.fullScreenBtn = [UIButton buttonWithType:UIButtonTypeSystem];
        
        // self.fullScreenBtn.backgroundColor = [UIColor colorWithRed:0.4 green:0.4 blue:0.4 alpha:1.0];
       // self.fullScreenBtn.tintColor = [UIColor clearColor];
        self.fullScreenBtn.frame = CGRectMake(self.PlayControlsView.frame.size.width - 50, 0, 50, 30);
        
        [self.fullScreenBtn setImage:[AlphaIcons imageOfFullScreenButtonWithFrame:self.fullScreenBtn.bounds]forState:UIControlStateNormal];
        [self.fullScreenBtn addTarget:self action:@selector(didClickfullScreenBtn:) forControlEvents:UIControlEventTouchUpInside];
        [self.PlayControlsView addSubview:self.fullScreenBtn];
   [self.fullScreenBtn mas_makeConstraints:^(MASConstraintMaker *make) {
       make.top.equalTo(self.PlayControlsView.mas_top);
       make.bottom.equalTo(self.PlayControlsView);
       make.right.equalTo(self.PlayControlsView);
       make.left.mas_equalTo(self.PlayControlsView.mas_right).offset(-50);
       
       
   }];

//        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(didRotateFromInterfaceOrientation:) name:UIDeviceOrientationDidChangeNotification object:nil];
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(deviceDidRotate:) name:UIDeviceOrientationDidChangeNotification object:nil];
        
    } failure:^(NSURLSessionDataTask * _Nonnull task, NSError * _Nonnull error) {
        print(@"%@",error);
    }];
}

-(void)deviceDidRotate:(NSNotification *)notification{
    print(@"%ld",(long)[[UIDevice currentDevice] orientation])    ;
    if ([[UIDevice currentDevice] orientation] == UIDeviceOrientationLandscapeRight | [[UIDevice currentDevice] orientation] == UIDeviceOrientationLandscapeLeft) {  // 如果是左右横向
       
        [SVProgressHUD resetOffsetFromCenter];
        [self.fullScreenBtn setImage:[AlphaIcons imageOfFullScreenButtonReverseWithFrame:self.fullScreenBtn.bounds] forState:UIControlStateNormal];
        UIWindow * keywindow = [UIApplication sharedApplication].keyWindow;
        self.playerLayer.frame = keywindow.frame;
         self.movieImgView.frame = CGRectMake(0, -100, ScreenWidth, ScreenHeight+80 );
       
        self.navigationController.navigationBar.hidden = YES;
       // self.PlayControlsView.frame = CGRectMake(0, 370, ScreenWidth, 30);
        [self.titleLabel mas_remakeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.view.mas_top);
            make.left.and.right.mas_equalTo(self.view);
            make.height.mas_equalTo(30);
        }];
    }else{ // 如果是竖屏
        [self.fullScreenBtn setImage:[AlphaIcons imageOfFullScreenButtonWithFrame:self.fullScreenBtn.bounds] forState:UIControlStateNormal];
        [self.titleLabel mas_remakeConstraints:^(MASConstraintMaker *make){
            make.top.equalTo(self.navigationController.navigationBar.mas_bottom);
            make.left.and.right.mas_equalTo(self.view);
            make.height.mas_equalTo(30);
            
        }];
        
        self.movieImgView.frame = _maskView.bounds;
        
        self.navigationController.navigationBar.hidden = NO;

        self.playerLayer.frame = CGRectMake(0, 64, self.view.frame.size.width, 300);
        self.PlayControlsView.frame = CGRectMake(0, ScreenHeight - 45, ScreenWidth, 45);
    }
}



@end
